name: e2e tests

on:
  workflow_call:
    inputs:
      kic-image:
        description: KIC image to be tested (e.g. `kong/kubernetes-ingress-controller:v2.9.0`).
        type: string
        required: true
      kong-image:
        description: Kong image to be tested (e.g. `kong:3.1.0`).
        type: string
        required: false
      kong-effective-version:
        description: Effective version of Kong (e.g. `3.4`). Used when testing against nightly Kong images.
        type: string
        required: false
      load-local-image:
        description: Whether to load the local built image into the Docker daemon (from artifact).
        type: boolean
        default: false
      all-supported-k8s-versions:
        description: Run tests against all supported Kubernetes versions. Otherwise, only against the latest one.
        type: boolean
        default: false
      run-gke:
        description: Run E2E tests on GKE as well as on Kind.
        type: boolean
        default: false
      run-istio:
        description: Run Istio E2E tests.
        type: boolean
        default: false

jobs:
  setup-e2e-tests:
    runs-on: ubuntu-latest
    outputs:
      test_names: ${{ steps.set_test_names.outputs.test_names }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - id: setup_golang
        name: setup golang
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version-file: go.mod

      - id: test_files
        name: Get test file names
        working-directory: test/e2e/
        # go list used to extract the test names from only those test files that
        # match the specified tags: here e2e_tests.
        # This filters out e.g. istio tests which we run separately.
        run: echo "result=$(go list -tags e2e_tests -f '{{ range .TestGoFiles }} {{- . }} {{ end }}' .)" >> $GITHUB_OUTPUT

      - name: Print test file names
        run: echo "Test file names ${{ steps.test_files.outputs.result }}"

      - id: set_test_names
        name: Set test names
        working-directory: test/e2e/
        # grep magic described in https://unix.stackexchange.com/a/13472
        # sed to add the extra $ is because some of our test names overlap. we need it so the -run regex only matches one test
        run: |
          echo "test_names=$(grep -shoP "(?<=^func )(Test[a-zA-z_0-9]+)(?=\(t \*testing.T\) {)" ${{ steps.test_files.outputs.result }} | sed -e "s/$/\$/"| jq -R . | jq -cs .)" >> $GITHUB_OUTPUT

      - name: Print test names
        run: echo "Test names ${{ steps.set_test_names.outputs.test_names }}"

  # TODO: extract this as a separate workflow reading the dependencies versions from a file (not only Kind, but also
  # GKE, Istio, Kong, etc.)
  # https://github.com/Kong/kubernetes-ingress-controller/issues/3349
  dependencies-versions:
    runs-on: ubuntu-latest
    outputs:
      kind-versions: ${{ steps.set-kind-versions.outputs.kind-versions }}
    steps:
      - id: set-kind-versions
        name: Set Kind versions
        run: |
          if [ "${{ inputs.all-supported-k8s-versions }}" == "true" ]; then
            echo "kind-versions=[\"1.23.17\", \"1.24.15\", \"1.25.11\", \"1.26.6\", \"1.27.3\", \"1.28.0\"]" >> $GITHUB_OUTPUT
          else
            echo "kind-versions=[\"1.28.0\"]" >> $GITHUB_OUTPUT
          fi
  kind:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    needs:
      - setup-e2e-tests
      - dependencies-versions
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version: ${{ fromJSON(needs.dependencies-versions.outputs.kind-versions) }}
        test: ${{ fromJSON(needs.setup-e2e-tests.outputs.test_names) }}
    steps:
      - name: Download built image artifact
        if: ${{ inputs.load-local-image }}
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: kic-image
          path: /tmp

      - name: Load built image
        if: ${{ inputs.load-local-image }}
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a

      - name: checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: setup golang
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version-file: go.mod

      - run: echo "GOTESTSUM_JUNITFILE=e2e-kind-${{ matrix.test }}-${{ matrix.kubernetes-version }}-tests.xml" >> $GITHUB_ENV

      - uses: Kong/kong-license@c4decf08584f84ff8fe8e7cd3c463e0192f6111b # master @ 20250107
        id: license
        with:
          op-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      # We need to pull the Gateway image locally if loading local image was specified.
      # This is a "workaround" of the fact that we bind the env variable - responsible for
      # indicating whether we'd like to load the images - for both controller
      # and gateway. Hence when that's set to true we try to load the Gateway
      # image which is available in the external container image registry but not
      # locally and that fails.
      - name: Pull Gateway image for tests
        if: ${{ inputs.kong-image != '' && inputs.load-local-image }}
        run: docker pull ${{ inputs.kong-image }}

      - name: run ${{ matrix.test }}
        run: make test.e2e
        env:
          E2E_TEST_RUN: ${{ matrix.test }}
          KONG_CLUSTER_VERSION: ${{ matrix.kubernetes-version }}
          TEST_KONG_CONTROLLER_IMAGE_OVERRIDE: ${{ inputs.kic-image }}
          TEST_KONG_LOAD_IMAGES: ${{ inputs.load-local-image }}
          TEST_KONG_IMAGE_OVERRIDE: ${{ inputs.kong-image }}
          TEST_KONG_EFFECTIVE_VERSION: ${{ inputs.kong-effective-version }}
          TEST_KONG_KONNECT_ACCESS_TOKEN: ${{ secrets.K8S_TEAM_KONNECT_ACCESS_TOKEN }}
          KONG_LICENSE_DATA: ${{ steps.license.outputs.license }}
          GOTESTSUM_JUNITFILE: "e2e-${{ matrix.test }}${{ matrix.kubernetes-version }}-tests.xml"

      - name: upload diagnostics
        if: ${{ always() }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: diagnostics-e2e-tests-${{ matrix.test }}-${{ matrix.kubernetes-version }}-${{ env.KONG_IMAGE_ARTIFACT }}
          path: /tmp/ktf-diag*
          if-no-files-found: ignore

      - name: collect test report
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: tests-report-e2e-kind-${{ matrix.test }}-${{ matrix.kubernetes-version }}-${{ env.KONG_IMAGE_ARTIFACT }}
          path: ${{ env.GOTESTSUM_JUNITFILE }}

  gke:
    if: ${{ inputs.run-gke }}
    environment: "gcloud"
    runs-on: ubuntu-latest
    needs:
      - setup-e2e-tests
      - dependencies-versions
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - 'v1.31.5'
        test: ${{ fromJSON(needs.setup-e2e-tests.outputs.test_names) }}
    steps:
      - name: checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: setup golang
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version-file: go.mod

      - run: echo "GOTESTSUM_JUNITFILE=e2e-gke-${{ matrix.test }}-${{ matrix.kubernetes-version }}-tests.xml" >> $GITHUB_ENV

      - uses: Kong/kong-license@c4decf08584f84ff8fe8e7cd3c463e0192f6111b # master @ 20250107
        continue-on-error: true
        id: license
        with:
          op-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: check availability of KIC image
        id: check_kic_image
        if: ${{ inputs.kic-image != '' }}
        # We have to check whether the image passed in inputs is available in the docker hub. 
        # If it's not, we'll fall back to a nightly image later.
        run: (docker manifest inspect ${{ inputs.kic-image }} && echo "kic_image=${{ inputs.kic-image }}" >> $GITHUB_OUTPUT) || true

      - name: choose KIC image
        id: choose_kic_image
        run: |
          if [ "${{ steps.check_kic_image.outputs.kic_image }}" != "" ]; then
            echo "kic-image=${{ steps.check_kic_image.outputs.kic_image }}" >> $GITHUB_OUTPUT  
          else
            # See the https://github.com/Kong/kubernetes-testing-framework/issues/587 TODO below.
            # If we add local image GKE support, we can get rid of this fallback.
            echo "kic-image=kong/nightly-ingress-controller" >> $GITHUB_OUTPUT
          fi

      - name: run ${{ matrix.test }}
        run: make test.e2e
        env:
          # NOTE: The limitation of the GKE setup is that we cannot run tests against a local image,
          # therefore we need to use the nightly one if the input image is not availabe externally.
          # TODO: Once we have a way to load images into GKE, we can use the local image.
          # KTF issue that should enable it: https://github.com/Kong/kubernetes-testing-framework/issues/587
          TEST_KONG_CONTROLLER_IMAGE_OVERRIDE: ${{ steps.choose_kic_image.outputs.kic-image }}
          TEST_KONG_IMAGE_OVERRIDE: ${{ inputs.kong-image }}
          TEST_KONG_EFFECTIVE_VERSION: ${{ inputs.kong-effective-version }}
          KONG_LICENSE_DATA: ${{ steps.license.outputs.license }}
          TEST_KONG_KONNECT_ACCESS_TOKEN: ${{ secrets.K8S_TEAM_KONNECT_ACCESS_TOKEN }}
          KONG_CLUSTER_VERSION: ${{ matrix.kubernetes-version }}
          KONG_TEST_CLUSTER_PROVIDER: gke
          E2E_TEST_RUN: ${{ matrix.test }}
          GOTESTSUM_JUNITFILE: "e2e-gke-${{ matrix.test }}-${{ matrix.kubernetes-version }}-tests.xml"
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
          GOOGLE_LOCATION: ${{ secrets.GOOGLE_LOCATION }}

      - name: upload diagnostics
        if: ${{ always() }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          # NOTE: we add the kong image suffix here because actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
          # only allows to have 1 artifact with the same name and we run this workflow
          # in parallel for different kong images (specifically for nightly).
          name: diagnostics-e2e-gke-tests-${{ matrix.test }}-${{ matrix.kubernetes-version }}-${{ env.KONG_IMAGE_ARTIFACT }}
          path: /tmp/ktf-diag*
          if-no-files-found: ignore

      - name: collect test report
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          # NOTE: we add the kong image suffix here because actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
          # only allows to have 1 artifact with the same name and we run this workflow
          # in parallel for different kong images (specifically for nightly).
          name: tests-report-e2e-gke-${{ matrix.test }}-${{ matrix.kubernetes-version }}-${{ env.KONG_IMAGE_ARTIFACT }}
          path: ${{ env.GOTESTSUM_JUNITFILE }}

  istio:
    if: ${{ inputs.run-istio }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - kubernetes-version: 'v1.28.0'
            istio-version: 'v1.19'
          - kubernetes-version: 'v1.27.3'
            istio-version: 'v1.18'
          - kubernetes-version: 'v1.26.6'
            istio-version: 'v1.17'
          - kubernetes-version: 'v1.25.11'
            istio-version: 'v1.16'
    steps:
      - name: Download built image artifact
        if: ${{ inputs.load-local-image }}
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: kic-image
          path: /tmp

      - name: Load built image
        if: ${{ inputs.load-local-image }}
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a

      - name: checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: setup golang
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version-file: go.mod

      - run: echo "GOTESTSUM_JUNITFILE=e2e-istio-${{ matrix.kind }}-${{ matrix.istio }}-tests.xml" >> $GITHUB_ENV

      - uses: Kong/kong-license@c4decf08584f84ff8fe8e7cd3c463e0192f6111b # master @ 20250107
        id: license
        with:
          op-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: run Istio tests
        run: make test.istio
        env:
          TEST_KONG_CONTROLLER_IMAGE_OVERRIDE: ${{ inputs.kic-image }}
          TEST_KONG_LOAD_IMAGES: ${{ inputs.load-local-image }}
          TEST_KONG_IMAGE_OVERRIDE: ${{ inputs.kong-image }}
          KONG_LICENSE_DATA: ${{ steps.license.outputs.license }}
          KONG_CLUSTER_VERSION: ${{ matrix.kubernetes-version }}
          ISTIO_VERSION: ${{ matrix.istio-version }}
          NCPU: 1 # it was found that github actions (specifically) did not seem to perform well when spawning
          # multiple kind clusters within a single job, so only 1 is allowed at a time.
          GOTESTSUM_JUNITFILE: "istio-${{ matrix.kubernetes-version }}-${{ matrix.istio-version }}-tests.xml"

      - name: upload diagnostics
        if: ${{ always() }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          # NOTE: we add the kong image suffix here because actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
          # only allows to have 1 artifact with the same name and we run this workflow
          # in parallel for different kong images (specifically for nightly).
          name: diagnostics-e2e-tests-istio-${{ matrix.kind }}-${{ matrix.istio }}-${{ env.KONG_IMAGE_ARTIFACT }}
          path: /tmp/ktf-diag*
          if-no-files-found: ignore

      - name: collect test report
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          # NOTE: we add the kong image suffix here because actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
          # only allows to have 1 artifact with the same name and we run this workflow
          # in parallel for different kong images (specifically for nightly).
          name: tests-report-e2e-istio-k8s-${{ matrix.kind }}-istio-${{ matrix.istio }}-${{ env.KONG_IMAGE_ARTIFACT }}
          path: ${{ env.GOTESTSUM_JUNITFILE }}"
