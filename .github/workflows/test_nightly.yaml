name: tests-nightly

on:
  pull_request:
    types:
      - labeled
  workflow_dispatch: {}

jobs:
  integration-tests-enterprise-postgres-nightly:
    if: ${{ github.event.label.name == 'ci/run-nightly' || github.event_name == 'workflow_dispatch' }}
    environment: "Configure ci"
    runs-on: ubuntu-latest
    steps:

    - uses: Kong/kong-license@c4decf08584f84ff8fe8e7cd3c463e0192f6111b # master
      id: license
      with:
        # PULP_PASSWORD secret is set in "Configure ci" environment
        password: ${{ secrets.PULP_PASSWORD }}

    - name: setup golang
      uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
      with:
        go-version: '^1.19'

    - name: cache go modules
      uses: actions/cache@f4b3439a656ba812b8cb417d2d49f9c810103092 # v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: checkout repository
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      with:
        fetch-depth: 0

    - name: run integration tests
      run: make test.integration.enterprise.postgres
      env:
        KONG_LICENSE_DATA: ${{ steps.license.outputs.license }}
        TEST_KONG_IMAGE: "kong/kong-gateway-internal"
        TEST_KONG_TAG: "master-alpine"
        TEST_KONG_PULL_USERNAME: ${{ secrets.GHA_DOCKERHUB_PULL_USER }}
        TEST_KONG_PULL_PASSWORD: ${{ secrets.GHA_KONG_ORG_DOCKERHUB_PUBLIC_TOKEN }}

    - name: collect test coverage
      uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
      with:
        name: coverage
        path: coverage.nightlyenterprisepostgres.out

    - name: upload diagnostics
      if: ${{ always() }}
      uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
      with:
        name: diagnostics-integration-tests-enterprise-postgres-nightly
        path: /tmp/ktf-diag*
        if-no-files-found: ignore

  integration-tests-postgres-nightly:
    if: ${{ github.event.label.name == 'ci/run-nightly' || github.event_name == 'workflow_dispatch' }}
    environment: "Configure ci"
    runs-on: ubuntu-latest
    steps:

    - name: setup golang
      uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
      with:
        go-version: '^1.19'

    - name: cache go modules
      uses: actions/cache@f4b3439a656ba812b8cb417d2d49f9c810103092 # v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: checkout repository
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      with:
        fetch-depth: 0

    - name: run integration tests
      run: make test.integration.postgres
      env:
        TEST_KONG_IMAGE: "kong/kong"
        TEST_KONG_TAG: "master-alpine"

    - name: collect test coverage
      uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
      with:
        name: coverage
        path: coverage.nightlypostgres.out

    - name: upload diagnostics
      if: ${{ always() }}
      uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
      with:
        name: diagnostics-integration-tests-postgres-nightly
        path: /tmp/ktf-diag*
        if-no-files-found: ignore

  integration-tests-dbless-nightly:
    if: ${{ github.event.label.name == 'ci/run-nightly' || github.event_name == 'workflow_dispatch' }}
    environment: "Configure ci"
    runs-on: ubuntu-latest
    steps:

    - name: setup golang
      uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
      with:
        go-version: '^1.19'

    - name: cache go modules
      uses: actions/cache@f4b3439a656ba812b8cb417d2d49f9c810103092 # v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: checkout repository
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      with:
        fetch-depth: 0

    - name: run integration tests
      run: make test.integration.dbless
      env:
        TEST_KONG_IMAGE: "kong/kong"
        TEST_KONG_TAG: "master-alpine"

    - name: collect test coverage
      uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
      with:
        name: coverage
        path: coverage.nightlydbless.out

    - name: upload diagnostics
      if: ${{ always() }}
      uses: actions/upload-artifact@ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5 # v3
      with:
        name: diagnostics-integration-tests-dbless-nightly
        path: /tmp/ktf-diag*
        if-no-files-found: ignore
