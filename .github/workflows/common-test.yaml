# Linting, unit tests, and generated resource verification
name: Common Tests

on:
  pull_request:
    branches:
      - 'main'
      - 'next'
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  lint-and-verify-generated:
    runs-on: ubuntu-latest
    steps:
    - name: Setup go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16'
    - name: Cache Go modules
      uses: actions/cache@v2.1.6
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup golangci-lint
      run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.25.0
    - name: Run golangci-lint
      run: make lint
    - name: Verify Codegen
      run: |
        export GOPATH=$(go env GOPATH)
        make verify-codegen
    - name: Setup kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "4.1.3"
    - name: Verify manifest consistency
      run: |
        make verify-manifests
  unit-test:
    environment: "Configure ci"
    runs-on: ubuntu-latest
    steps:
    - name: Setup go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16'
    - name: Cache Go modules
      uses: actions/cache@v2.1.6
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-test-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-test-
    - name: Install Go-lint
      run: go get -u golang.org/x/lint/golint
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Run tests with Coverage
      run: make coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        flags: unit-test
        fail_ci_if_error: true
