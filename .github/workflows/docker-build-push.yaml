name: Build and push development images

on:
  push:
    branches:
      - 'main-test'
    tags:
      - '*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Parse semver string
        id: semver_parser
        if: ${{ contains(github.ref, 'tags') }}
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'refs\/tags\/(.*)$'
      - name: Add Alpine standard tags
        run: |
          echo 'ALPINE_STANDARD<<EOF' >> $GITHUB_ENV
          echo 'type=ref,event=branch,suffix=-alpine' >> $GITHUB_ENV
          echo 'type=semver,pattern={{version}},suffix=-alpine' >> $GITHUB_ENV
          echo 'type=ref,event=branch' >> $GITHUB_ENV
          echo 'type=semver,pattern={{version}}' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Add Red Hat standard tags
        run: |
          echo 'REDHAT_STANDARD<<EOF' >> $GITHUB_ENV
          echo 'type=ref,event=branch,suffix=-redhat' >> $GITHUB_ENV
          echo 'type=semver,pattern={{version}},suffix=-redhat' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Add Alpine major.minor tag
        if: ${{ steps.semver_parser.outputs.prerelease == '' }}
        run: |
          echo 'ALPINE_SUPPLEMENTAL<<EOF' >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo 'type=semver,pattern={{major}}.{{minor}}' >> $GITHUB_ENV
          echo 'type=semver,pattern={{major}}.{{minor}},suffix=-alpine' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Add Red Hat major.minor tag
        if: ${{ steps.semver_parser.outputs.prerelease == '' }}
        run: |
          echo 'REDHAT_SUPPLEMENTAL<<EOF' >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo 'type=semver,pattern={{major}}.{{minor}},suffix=-redhat' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Docker meta (alpine)
        id: meta_alpine
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: kong/kubernetes-ingress-controller
          flavor: |
            latest=false
          tags: ${{ env.ALPINE_STANDARD }}${{ env.ALPINE_SUPPLEMENTAL }}
      - name: Docker meta (redhat)
        id: meta_redhat
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: kong/kubernetes-ingress-controller
          flavor: |
            latest=false
          tags: ${{ env.REDHAT_STANDARD }}${{ env.REDHAT_SUPPLEMENTAL }}
      - name: Build binary
        env:
          TAG: ${{ steps.meta_alpine.outputs.version }}
          COMMIT: ${{ github.sha }}
          REPO_INFO: https://github.com/${{ github.repository }}.git
        id: docker_build_binary
        uses: docker/build-push-action@v2
        with:
          push: false
          file: Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          target: build
      - name: Build and push Alpine
        id: docker_build_alpine
        env:
          TAG: ${{ steps.meta_alpine.outputs.version }}
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile
          tags: ${{ steps.meta_alpine.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          target: alpine
      - name: Build and push RedHat
        id: docker_build_redhat
        env:
          TAG: ${{ steps.meta_redhat.outputs.version }}
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile
          tags: ${{ steps.meta_redhat.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          target: redhat
