# Uploads test reports to Codecov and BuildPulse.
# The contract for Codecov is that all test reports are uploaded to the same "coverage" artifact location.
# The contract for BuildPulse is that all test reports are uploaded to the same "tests-report" artifact location.

name: test reports

on:
  workflow_call:
    inputs:
      coverage:
        description: Whether to upload coverage to Codecov.
        type: boolean
        default: true
      buildpulse:
        description: Whether to upload test reports to BuildPulse.
        type: boolean
        default: true

jobs:
  coverage:
    timeout-minutes: ${{ fromJSON(vars.GHA_DEFAULT_TIMEOUT || 10) }}
    if: ${{ inputs.coverage && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      # The below allows PRs from forks to access the secrets in a secure way
      # https://michaelheap.com/access-secrets-from-forks
      # NOTE: Reviewer has to check whether the code in PR does not expose secrets!
      - name: get user permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: check user permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - name: checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: collect test coverage artifacts
        id: download-coverage
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          name: combined-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ steps.download-coverage.outputs.download-path }}
          fail_ci_if_error: true
          verbose: true

  buildpulse-report:
    timeout-minutes: ${{ fromJSON(vars.GHA_DEFAULT_TIMEOUT || 10) }}
    if: ${{ inputs.buildpulse && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      # The below allows PRs from forks to access the secrets in a secure way
      # https://michaelheap.com/access-secrets-from-forks
      # NOTE: Reviewer has to check whether the code in PR does not expose secrets!
      - name: get user permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: check user permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - name: checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: download tests report
        id: download-coverage
        uses: actions/download-artifact@v4
        with:
          pattern: tests-report-*
          path: report
          merge-multiple: true

      - name: Upload test results to BuildPulse for flaky test detection
        if: ${{ !cancelled() }}
        uses: buildpulse/buildpulse-action@v0.11.0
        with:
          account: 962416
          repository: 127765544
          path: report/*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}
