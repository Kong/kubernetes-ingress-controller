package main

import (
	"bytes"
	"os"
	"reflect"
	"text/template"

	"github.com/kong/kubernetes-ingress-controller/v3/internal/store"
)

// This code generates `store.CacheStores.TakeSnapshot` method.

const (
	outputFile = "zz_generated_cache_all_stores.go"

	outputTemplate = `// Code generated by hack/generators/cache-stores-snapshot/main.go; DO NOT EDIT.
package store

import "k8s.io/client-go/tools/cache"

// listAllStores returns a list of all cache stores embedded in the struct.
func (c CacheStores) listAllStores() []cache.Store {
	return []cache.Store{
		{{- range . }}
		c.{{ . }},
		{{- end }}
	}
}
`
)

func main() {
	cacheStoresType := reflect.TypeOf(store.CacheStores{})
	var storesFieldsNames []string
	for i := 0; i < cacheStoresType.NumField(); i++ {
		field := cacheStoresType.Field(i)
		// Only collect fields of `Store` type as `CacheStores` may include other ones (e.g. a mutex).
		if field.Type.Name() == "Store" {
			storesFieldsNames = append(storesFieldsNames, field.Name)
		}
	}

	tpl, err := template.New("output").Parse(outputTemplate)
	if err != nil {
		panic(err)
	}

	contents := &bytes.Buffer{}
	if err := tpl.Execute(contents, storesFieldsNames); err != nil {
		panic(err)
	}

	if err := os.WriteFile(outputFile, contents.Bytes(), 0o600); err != nil {
		panic(err)
	}
}
