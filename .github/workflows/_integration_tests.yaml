name: integration tests

on:
  workflow_call:
    inputs:
      kong-container-repo:
        type: string
        default: "kong/kong"
        required: false
      kong-container-tag:
        type: string
        # TODO: Consider changing to "kong:latest"
        # See https://github.com/Kong/kubernetes-testing-framework/issues/542
        default: "3.2"
        required: false
      kong-enteprise-container-repo:
        type: string
        default: "kong/kong-gateway"
        required: false
      kong-enterprise-container-tag:
        type: string
        # TODO: Consider changing to "kong/kong-gateway:latest"
        # See https://github.com/Kong/kubernetes-testing-framework/issues/542
        default: "3.2"
        required: false

jobs:
  integration-tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    env:
      KONG_CLUSTER_VERSION: 'v1.27.1'
      TEST_KONG_ROUTER_FLAVOR: 'traditional'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: dbless
            test: dbless
          - name: postgres
            test: postgres
          - name: feature-gates
            test: dbless
            feature_gates: "GatewayAlpha=true,CombinedRoutes=false"
          - name: dbless-knative
            test: dbless.knative
          - name: postgres-knative
            test: postgres.knative
          - name: enterprise-postgres
            test: enterprise.postgres
            enterprise: true
          - name: dbless-traditional-compatible
            test: dbless
            router-flavor: 'traditional_compatible'
          - name: postgres-traditional-compatible
            test: postgres
            router-flavor: 'traditional_compatible'
          - name: dbless-expression-router
            test: dbless
            feature_gates: "ExpressionRoutes=true,GatewayAlpha=true"
            router-flavor: "expressions"
          # TODO: remove this once CombinedServices is enabled by default.
          # https://github.com/Kong/kubernetes-ingress-controller/issues/3979
          - name: dbless-combined-services
            test: dbless
            feature_gates: "GatewayAlpha=true,CombinedServices=true"

    steps:
      - uses: Kong/kong-license@master
        id: license
        with:
          password: ${{ secrets.PULP_PASSWORD }}

      - name: Set image of Kong
        id: set_kong_image
        run: |
          if [ "${{ matrix.enterprise }}" == "true" ]; then
            echo "TEST_KONG_IMAGE=${{ github.event.inputs.kong-container-repo }}" >> $GITHUB_ENV
            echo "TEST_KONG_TAG=${{ github.event.inputs.kong-container-tag }}" >> $GITHUB_ENV
          else
            echo "TEST_KONG_IMAGE=${{ github.event.inputs.kong-enterprise-container-repo }}" >> $GITHUB_ENV
            echo "TEST_KONG_TAG=${{ github.event.inputs.kong-enterprise-container-tag }}" >> $GITHUB_ENV
          fi

      - name: checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup golang
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - name: run ${{ matrix.name }}
        run: make test.integration.${{ matrix.test }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KONG_LICENSE_DATA: ${{ steps.license.outputs.license }}
          KONG_CONTROLLER_FEATURE_GATES: "${{ matrix.feature_gates }}"
          JUNIT_REPORT: "integration-tests-${{ matrix.name }}.xml"
          TEST_KONG_ROUTER_FLAVOR: ${{ matrix.router-flavor }}

      - name: run ${{ matrix.name }} - invalid config
        run: make test.integration.${{ matrix.test }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KONG_LICENSE_DATA: ${{ steps.license.outputs.license }}
          KONG_CONTROLLER_FEATURE_GATES: "${{ matrix.feature_gates }}"
          JUNIT_REPORT: "integration-tests-invalid-config-${{ matrix.name }}.xml"
          GOTESTFLAGS: "-run=TestIngressRecoverFromInvalidPath"
          TEST_RUN_INVALID_CONFIG_CASES: "true"

      - name: collect test coverage
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage.*.out

      - name: upload diagnostics
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: diagnostics-integration-tests-${{ matrix.name }}
          path: /tmp/ktf-diag*
          if-no-files-found: ignore

      - name: collect test report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: tests-report
          path: integration-tests-${{ matrix.name }}.xml
