# NOTE The Gateway APIs are not yet available by default in Kubernetes.
# Follow these instructions to install them before using this example:
# https://gateway-api.sigs.k8s.io/guides/#install-experimental-channel
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tlsecho
  labels:
    app: tlsecho
spec:
  selector:
    matchLabels:
      app: tlsecho
  template:
    metadata:
      labels:
        app: tlsecho
    spec:
      containers:
      - name: tlsecho
        image: kong/go-echo:0.3.0
        ports:
        - containerPort: 1030
        env:
        - name: POD_NAME
          value: example-tlsroute-manifest
        - name: TLS_PORT
          value: "1030"
        - name: TLS_CERT_FILE
          value: /var/run/certs/tls.crt
        - name: TLS_KEY_FILE
          value: /var/run/certs/tls.key
        volumeMounts:
        - mountPath: /var/run/certs
          name: secret-test
          readOnly: true
      volumes:
      - name: secret-test
        secret:
          defaultMode: 420
          secretName: example-tlsroute
---
apiVersion: v1
kind: Service
metadata:
  name: tlsecho
spec:
  ports:
  - port: 8899
    protocol: TCP
    targetPort: 1030
  selector:
    app: tlsecho
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: example-tlsroute
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMekNDQXhlZ0F3SUJBZ0lVVkdBQWlrd3Fid3VIRFBpd092a1hwM0hpUHlRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daQXhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJREFwRFlXeHBabTl5Ym1saE1SWXdGQVlEVlFRSApEQTFUWVc0Z1JuSmhibU5wYzJOdk1SSXdFQVlEVlFRS0RBbExiMjVuSUVsdVl5NHhHREFXQmdOVkJBc01EMVJsCllXMGdTM1ZpWlhKdVpYUmxjekVtTUNRR0ExVUVBd3dkWlhoaGJYQnNaUzEwYkhOeWIzVjBaUzVyYjI1bkxtVjQKWVcxd2JHVXdJQmNOTWpVd016QXpNVGt6T0RBMVdoZ1BNakV5TlRBeU1EY3hPVE00TURWYU1JR1FNUXN3Q1FZRApWUVFHRXdKVlV6RVRNQkVHQTFVRUNBd0tRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCd3dOVTJGdUlFWnlZVzVqCmFYTmpiekVTTUJBR0ExVUVDZ3dKUzI5dVp5QkpibU11TVJnd0ZnWURWUVFMREE5VVpXRnRJRXQxWW1WeWJtVjAKWlhNeEpqQWtCZ05WQkFNTUhXVjRZVzF3YkdVdGRHeHpjbTkxZEdVdWEyOXVaeTVsZUdGdGNHeGxNSUlCSWpBTgpCZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE2QS9kMGRBMVZTM2RQZGV0emRIaGlSRjFwWGtWCnJmM1IzbTBucnUxa05Kd1d1TDdKYnBTd0MraVRvNXRINDYyNzVzdWFQRXpBYm5JZTVsWWVrdGJpOTFLeU9XUGcKQkw0emZiZCtSNXhna3JiTWU4dy9mbGZIeHhwZ0I2d0xXOHdoQS9Ec3hNUUhhVThGY2JSMTZCd3M3czVLNm9YcgpDbngwMEtnMEo1SHRUeWhoSStsQjJRQzJKZXpqbEQxaGkxYjk1ekg3S2Y0bTVydlFYMmxtSndVVm9VQkNlQnNaClRkUzl1bUdBSVcxVDEwczJDaWdHbjBmUVFFR0RCUnFScDJ4NmNQVDhicXNndEZDcTBNZG1qZlBabW9HVmlsNUgKNlh6VnVKdFBZSFJOV0RPK2dydFBBbDhwOUUyM2VtY2gzTUZwN0RVYUFmZGNwZE45czZLOWptZmNjd0lEQVFBQgpvMzB3ZXpBZEJnTlZIUTRFRmdRVW9Jb05BN1BpUExsSTYrRU93Wk4wVTdmVFlrNHdId1lEVlIwakJCZ3dGb0FVCm9Jb05BN1BpUExsSTYrRU93Wk4wVTdmVFlrNHdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QW9CZ05WSFJFRUlUQWYKZ2gxbGVHRnRjR3hsTFhSc2MzSnZkWFJsTG10dmJtY3VaWGhoYlhCc1pUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBZzZlQ0JaMDRYRVRzd1o2WUkwWjRBZHk5ZEJJRU5NcHBVK050Njh4VWZqR2RuckRBNVByUzBmcUFXcGswClQ1Wm9PUnovZVNnZDZJaUJWZU4yYlJ3VFJIT092dlJWVC9JQ0d5anhjYUJFT0gzVDBoSUwzMDhPbTEvTUZMQnEKNm5wZ0lpcEwzN2FPL015cmFjcUVqOGtyTHJKeitIdlFOUGRjU2JJdE5Pd3RMaFE5VjJhbG53cGNwQlY5bnFDbgpLUllMc05jTTBkaVZ4a2tuTC96Z0oxQy9jdWJQeGlXRVpRY05FV3ppN0cyLzRwdEdqeG1DT2lLUm91c0l5ZU1RCldLS1Bidlg1dExBY29kR1ZTTEFqVGhGYlVFUnF3eHdxOHJ5anhmQlVWdHZzUngrRTRacDZYVitpdWNRdFNNRHAKVmhKZHVGOUliZllnSzVOMlY2TGVJZkplUXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRG9EOTNSMERWVkxkMDkKMTYzTjBlR0pFWFdsZVJXdC9kSGViU2V1N1dRMG5CYTR2c2x1bExBTDZKT2ptMGZqcmJ2bXk1bzhUTUJ1Y2g3bQpWaDZTMXVMM1VySTVZK0FFdmpOOXQzNUhuR0NTdHN4N3pEOStWOGZIR21BSHJBdGJ6Q0VEOE96RXhBZHBUd1Z4CnRIWG9IQ3p1emtycWhlc0tmSFRRcURRbmtlMVBLR0VqNlVIWkFMWWw3T09VUFdHTFZ2M25NZnNwL2libXU5QmYKYVdZbkJSV2hRRUo0R3hsTjFMMjZZWUFoYlZQWFN6WUtLQWFmUjlCQVFZTUZHcEduYkhwdzlQeHVxeUMwVUtyUQp4MmFOODltYWdaV0tYa2ZwZk5XNG0wOWdkRTFZTTc2Q3UwOENYeW4wVGJkNlp5SGN3V25zTlJvQjkxeWwwMzJ6Cm9yMk9aOXh6QWdNQkFBRUNnZ0VBREErZHR1OXNMaS85alRRZCtqeXhJa3pGZ1dNQWhQUC9DZUZBekQ4clU1bFUKakZLTTArZFNHbDhDcEF0ZDJrLzlIRVdJWlIrVXdCNFo5ckpvSnJmdUZrT2hOQWxrVmNBYThLcnVSY09JdUx5eApJUWdMRHNKNk1DSWNvVVFkclFPTmZicHlXOWNDWkVTYitGTys3YldLZ2s0M2ZPYVdsNHR1RGlyZExHZFJ0Rk9WCmF0dHZmVEZMYUp0WFZGbXJSb1NuaHc3UDkxY3RhNDBKbkE3SlZpeG90UExuQmUvaUJxV2dwUEtMZnVkT3pMSHkKL2pMbWNDM0ZMUWhSQkNSSVg1dUdJdjBGZEdoL1RjZmxGQ2Z5MStoSUlQWStYYi9MRzk2Q2Q2dGg1ZHJWbXpEWQp4WmUreCtLeTVqOTRuY3Y3UjRLNTZ6Wm1jR0NxVlcvdDZTUDBtZG5jOFFLQmdRRDhlektQUGlIN1BmVHVhb1dCClFwSFlqMjg2cmQ5Y2tVSTNYZ05YSXUzdXlrOXFwcTlBVm5GYmZnNldTRC9UWUEyaUorelVDbWFqYm5VR0xmZTAKbWI0bEdYZTNEQStmeHJhYVgzeitkVm5wSFU1Vng1dy91RWtDWDEzbzkwdFdZQkxzOXY3N2NoS3AvSzNnNllUYgpBSmpSeXljSWk2bTZnK2JoWE9jSE5KZFB3d0tCZ1FEclM5RXdtTzZrdDRraE4xSnFpUlhjcGpaa2xKWDd5NjBrCjFGTUcwSE42dzVSV29rUk9CYnRZdVBpdG8yZVNMWUVyQUoyVTFQazVWZW9MeXkwWXFXMmQzanhEaVY0UEI5ZU4KeWhabzlXNDdnTmVvT3d4c2dNeFZRZ2NCZXlmSEZFMnFYajBrMUtzOWEwYmk5Wm03TkhHS1Nzc3R6UUNoZkdneApyMFJFdHRtbGtRS0JnQWNhb0UyUGZmMUh2UUNJVnNGUVVqSTV0dk43dVBFdDFTTWhyZzVobVRoQzBRRTdOMnNrCkE0U0RnMzJQQXR5N3N5YUE0UlVHUmVVTFVwZWQ2MzVWWlJnK0l6UXZUckU4TWg4ZDJMS0FNc3R3VzZmbU9ldEIKRUN6VTZodUgrY0t3YVZmcGl6c2Y5bzU1NFpxV2QzcUNCY3JCWUpQSStqbVpSSUhLejJWUWdZRnBBb0dBRFY3RgppRWxvWmh1M3d4ZHRxM2dXc2U4UDhDOHhScG1RUVNOL2hFZWNDRUhNMEE5d2FpNlJNcjF3QkEzZytNRjFNWWhiCmEvV2VJOC9wK0xtVzJtdm1PcTVDSm1STDMvYkdITng2NFlQd3U1amFxRWlTc0NleGRMYkh4eUhFWk4rV2VqUFkKclpzWUQrbGtvY2pxNzJSUGYxZzRxMldXdjVaZUpWU2NRSHRUYXNFQ2dZRUEwUHRyd1lQblNjcURzc0pmMkU3cQo5cDBaTHJ0S1pvTVI4NlFYN1ZvZDVGamhEOEdCS2U0aXZBNHZ4QmZQanBKVXBIZTB5M1FjMlhCcUVrMnRwMWtpClpxbjlQcGdIcWQycHlvSzhGSVdETm1ycGptOUU4WXZtQ3NoSENIQU04Z0JjQXRRbnI2TUxZTVZvanZFd3preDUKSjBOUlRqRzYreGwwSC9yNHU4ZlF3K3M9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
type: kubernetes.io/tls
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: example-tlsroute
  annotations:
    konghq.com/gatewayclass-unmanaged: "true"
spec:
  controllerName: konghq.com/kic-gateway-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: example-tlsroute
spec:
  gatewayClassName: example-tlsroute
  listeners:
  - name: http
    protocol: HTTP
    port: 80
  - name: tls
    protocol: TLS
    port: 8899
    hostname: example-tlsroute.kong.example
    tls:
      mode: Passthrough
      certificateRefs:
      - name: example-tlsroute
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: tlsecho
spec:
  parentRefs:
  - name: example-tlsroute
  hostnames:
  - example-tlsroute.kong.example
  rules:
  - backendRefs:
    - name: tlsecho
      port: 8899
